{"0":[{"n":"2023s","u":"https://zyprex.github.io/zyprex.blog/2023/"},{"n":"2022s","u":"https://zyprex.github.io/zyprex.blog/2022/"},{"n":"2021s","u":"https://zyprex.github.io/zyprex.blog/2021/"},{"n":"2020s","u":"https://zyprex.github.io/zyprex.blog/2020/"}],"categories":[{"n":"android","u":"/categories/android/"},{"n":"cheatsheet","u":"/categories/cheatsheet/"},{"n":"curious","u":"/categories/curious/"},{"n":"emacs","u":"/categories/emacs/"},{"n":"ffmpeg","u":"/categories/ffmpeg/"},{"n":"hugo","u":"/categories/hugo/"},{"n":"introspection","u":"/categories/introspection/"},{"n":"life","u":"/categories/life/"},{"n":"linux","u":"/categories/linux/"},{"n":"methodology","u":"/categories/methodology/"},{"n":"windows","u":"/categories/windows/"}],"tags":[{"n":"batch","u":"/tags/batch/"},{"n":"bujo","u":"/tags/bujo/"},{"n":"c","u":"/tags/c/"},{"n":"chart-js","u":"/tags/chart-js/"},{"n":"command","u":"/tags/command/"},{"n":"debug","u":"/tags/debug/"},{"n":"git","u":"/tags/git/"},{"n":"github","u":"/tags/github/"},{"n":"katex","u":"/tags/katex/"},{"n":"macro","u":"/tags/macro/"},{"n":"markdown","u":"/tags/markdown/"},{"n":"math","u":"/tags/math/"},{"n":"mermaid-js","u":"/tags/mermaid-js/"},{"n":"network","u":"/tags/network/"},{"n":"sdcc","u":"/tags/sdcc/"},{"n":"softwarwe","u":"/tags/softwarwe/"},{"n":"test","u":"/tags/test/"},{"n":"tool","u":"/tags/tool/"},{"n":"trick","u":"/tags/trick/"},{"n":"vim","u":"/tags/vim/"},{"n":"zsh","u":"/tags/zsh/"}],"1":[{"c":"Prologue¶\rI use vim editor about 2 years before. There are so many guides in the web. I think it\u0026rsquo;s not my duties to proclaimed the powerful of vim editor. But the vim editor really save my life from a mistake of file deletion.\nThe Bitter After Disaster¶\rWhen I delete files in an accident, I feel the whole world swirled around me, and angry, agony filled my heart. It\u0026rsquo;s suffered a lot. I try the Windows File Recovery, but it\u0026rsquo;s recover other files and just not the files I deleted a moment ago.\nIf you curious my steps, I use winfr E: C: /regular /n *.*, it\u0026rsquo;s works somehow, but for me is not enough.\nSoon I realized the vim\u0026rsquo;s backup file, and successful get lost files. Admirable vim!, all is thanks to I edit files in vim.\nThe Vim Editor¶\rDo you know how to set the backup for vim ?\nType :e $MYVIMRC, and write those line.\nset backup backupdir=~/.cache/vim/backup,$TMP/vim/backup.\rIt\u0026rsquo;s useful when you delete files that you just edited by accident. You can find the files in ~/.cache/vim/backup/, with a ~ suffix.\nEpilogue¶\rAugust 7, 2023, the creator of vim \u0026ndash; Bram Moolenaar, aged 62, passed away.\nWhat a pity.\n","n":"How the Vim Save My Life","u":"https://zyprex.github.io/zyprex.blog/2023/how-the-vim-save-my-life/"},{"c":"Convert m3u8 to mp4 file¶\rUse index.m3u8 convert all TS files to a mp4 file. (note: it can use web link as input)\n1  ffmpeg -i index.m3u8 -c copy -bsf:a aac_adtstoasc out.mp4   Split mp4 file to m3u8 list¶\rSplit a.mp4 to list of 240 seconds TS files in out folder.\n1 2  ffmpeg -i a.mp4 -vcodec copy -acodec copy -vbsf h264_mp4toannexb a.ts ffmpeg -i a.ts -c copy -map 0 -f segment -segment_list \u0026#34;out/index.m3u8\u0026#34; -segment_time 240 \u0026#34;out/%%2d.ts\u0026#34;   Merge Videos¶\rA use case to merge videos by use a text file.\n1 2 3 4 5 6 7  #file_name: a.txt #----------- #file \u0026#39;0.mp4\u0026#39; #file \u0026#39;1.mp4\u0026#39; #file \u0026#39;...\u0026#39; #----------- ffmpeg -f concat -safe 0 -i a.txt -c copy a.mp4   Cut Video¶\rA use case to cut video 5 minutes start from 1 minutes.\n1 2 3  start_time=00:01:00 end_time=00:05:00 ffmpeg -threads 16 -ss ${start_time} -i ${input} -to ${end_time} -c:v copy -c:a copy ${output}   Compress videos¶\rStrategy 1. Lower Resolution¶\r1 2  # resolution (1920x1080/1280x720/640x360/426x240) ffmpeg -threads 16 -i ${input} -s 426x240 -c:a copy ${output}   Evalutation:\n lose: high compress: high  Strategy 2. Lower Frame Rate¶\r1  ffmpeg -threads 16 -i ${input} -r 24 -c:a copy ${output}   Evalutation:\n lose: medium compress: low  Strategy 3. Lower Bit Rate¶\r1  ffmpeg -threads 16 -i ${input} -b:v 128k -c:a copy ${output}   Evalutation:\n lose: high compress: low  Strategy 4. H264 to H265¶\r1  ffmpeg -threads 16 -i ${input} -c:v libx265 -c:a copy %{output}   Evalutation:\n lose: low compress: medium  Strategy 5. Rise CRF¶\r1 2  # crf 0-51 ffmpeg -threads 16 -i ${input} -c:v libx264 -crf 28 -preset veryslow -c:a copy %{output}   Evalutation:\n lose: medium compress: high  Read More¶\r The Complete Guide for Using ffmpeg in Linux\r↗ \r  ","n":"Use ffmpeg Convert Videos","u":"https://zyprex.github.io/zyprex.blog/2023/use-ffmpeg-convert-videos/"},{"c":"When I try to start a Hotspot, I finally found that my computer doesn\u0026rsquo;t support AP mode.\nHere is a link for where I stopped.\nsoftware access point\r↗ \r","n":"Create WLAN Hotspot on Linux","u":"https://zyprex.github.io/zyprex.blog/2023/create-wlan-hotspot-on-linux/"},{"c":"Useful Chrome Flags¶\rTo Access the flags, type chrome://flags in browser address bar (omnibox), then search those word and enable them.\n forced color reader mode smooth scrolling GPU rasterization zero-copy rasterization turn off caching of streaming media to disk back-forward caching QUIC protocol parallel downloading download range support  ","n":"Useful Chrome Flags","u":"https://zyprex.github.io/zyprex.blog/2023/useful-chrome-flags/"},{"c":"Use Batch Scripts Monitor Register Values¶\rRecently I noticed that some software, even after they\u0026rsquo;re uninstalled, didn\u0026rsquo;t clear their register values. It\u0026rsquo;s drive me mad. So I decide to monitor reigister values to find who in charge of abused register write action.\nAt first glance, it could use RegOpenKeyEx() and RegCloseKey() to read latest register values, but use a c program to achieve all of this, may seems too overhead, and I don\u0026rsquo;t want for another software do this for me. All in all, I finally figure out the pure and simple batch script is just perfect for me.\nHow I did it?\n read the register values save the values to file wait for a register values change read the register values again compare previous saved values with current if anything changed, report this changed, keep a log for what have changed  For the waitting of register values change, run scripts in backgrounds is waste of computer resources, it could replace by check every times when computer boot up, or use schedule task check every X hours if you like.\nTimes to show you code, feel free to change it to suit your particular needs:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  :: This batch script attempt to compare register key change before and after :: the script run, if any diff exist, it paused. @ECHO OFF SET from_reg_keyname=HKCU\\Software SET latest_reg=latest.txt SET origin_reg=origin.txt SET log_file=diffReg.log IF EXIST %latest_reg% ( GOTO label_diff ) ELSE ( REG QUERY %from_reg_keyname% \u0026gt; %latest_reg% EXIT ) :label_diff MOVE %latest_reg% %origin_reg% \u0026gt;NUL REG QUERY %from_reg_keyname% \u0026gt; %latest_reg% FC %latest_reg% %origin_reg% :: IF has diff print diff and pause ELSE delete origin_reg IF %ERRORLEVEL% GEQ 1 ( ECHO ---------------- \u0026gt;\u0026gt;%log_file% date /T \u0026gt;\u0026gt;%log_file% ECHO ---------------- \u0026gt;\u0026gt;%log_file% FC %latest_reg% %origin_reg% \u0026gt;\u0026gt;%log_file% ECHO. \u0026gt;\u0026gt;%log_file% PAUSE ) ELSE ( DEL %origin_reg% )   ","n":"Use Batch Scripts Monitor Register Values","u":"https://zyprex.github.io/zyprex.blog/2022/use-batch-scripts-monitor-register-values/"},{"c":"Prove Kaprekar Constant with C Program¶\rKnow the kaprekar constant¶\rWhat is a kaprekar constant ?\n Given by a 4 digit integer number, for example 1000. Form the largest and the smallest number from it\u0026rsquo;s digits. Substract these two numbers and get the new integer. Continue with the process, until stop by number 6174.  The 6174 is kaprekar constant. Because use 6174 to calculate will get 6174.\nA manual calculate example:\n1 2 3 4 5 6  1000 - 0001 = 0999 9990 - 0999 = 8991 9981 - 1899 = 8082 8820 - 0288 = 8532 8532 - 2358 = 6174 7641 - 1467 = 6174   All 4 digit integer numbers have the same pitfall loop end.\nLet\u0026rsquo;s use c program to prove it.\nDraw Sketch¶\r Decide how to pass parameter  Pass integer is intuitive, but in this case I use string , because reform digit generated a char array, and with string parameter, test in terminal with bash script more convient.\nOverview of plan   convert strings to a char array. sort char array descend. calculate loop until 6174.  Jump into Detail¶\r convert strings to a char array.  1 2 3 4 5  unsigned long num_len = strlen(num); char *arr = (char *)malloc(num_len * sizeof(char)); for (i = 0; i \u0026lt; num_len; i++) { arr[i] = num[i] - \u0026#39;0\u0026#39;; }   sort char array descend  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  void sort_char_array_descend(char arr[], int len) { int i, j, idx; for (i = 0; i \u0026lt; len - 1; i++) { idx = i; for (j = i + 1; j \u0026lt; len; j++) { if (arr[idx] \u0026lt; arr[j]) { idx = j; } } if (idx != i) { char temp = arr[i]; arr[i] = arr[idx]; arr[idx] = temp; } } }   calculate loop to end  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  void calc_kaprekar_constant(char num[]) { int ret = 0; int i, j, idx; unsigned long num_len = strlen(num); char *arr = (char *)malloc(num_len * sizeof(char)); for (i = 0; i \u0026lt; num_len; i++) { arr[i] = num[i] - \u0026#39;0\u0026#39;; } int times, n1, n2; int origin_num = 0, next_num = 0; for (n1 = 0, times = 1, i = num_len - 1; i \u0026gt;= 0; times *= 10, i--) { origin_num += (times * arr[i]); } int step_count = 0; do { sort_char_array_descend(arr, num_len); /* max digital */ for (n1 = 0, times = 1, i = num_len - 1; i \u0026gt;= 0; times *= 10, i--) { n1 += (times * arr[i]); } /* min digital */ for (n2 = 0, times = 1, i = 0; i \u0026lt; num_len; times *= 10, i++) { n2 += (times * arr[i]); } next_num = n1 - n2; DEBUG$ printf(\u0026#34;%d-%d=%d\\n\u0026#34;, n1, n2, next_num); if (next_num == origin_num || next_num == 0) { DEBUG$ printf(\u0026#34;%d (jump into black hole after step %d)\\n\u0026#34;, next_num, step_count); ret = 1; break; } origin_num = next_num; step_count++; int_to_char_arr(next_num, arr, num_len); } while (1); free(arr); arr = NULL; return ret; }   Small Tips for Debug Print¶\r1 2 3 4 5 6  #define DEBUG /* comment this line to remove all debug code sentence */#ifdef DEBUG #define DEBUG$ #else #define DEBUG$ for (;0;) #endif   Handle Other Case¶\rProve other than 4-digits integer may cause infinite loop, so use a link list avoid those case. The link list save each steps result, when a calculate done, check whether it is in previous\u0026rsquo;s results list.\nComplete Program¶\rIn this program, you can define different macro to run differnt test case.\ninclude \u0026lt;stdio.h\u0026gt;#include \u0026lt;stdlib.h\u0026gt;#include \u0026lt;string.h\u0026gt;#include \u0026lt;strings.h\u0026gt;#define DEBUG /* comment this line to remove all debug code sentence */#ifdef DEBUG #define DEBUG$ #else #define DEBUG$ for (; 0;) #endif  struct node { int data; struct node *next; }; void init_node(struct node **node, int data) { *node = (struct node *)malloc(sizeof(struct node)); (*node)-\u0026gt;data = data; (*node)-\u0026gt;next = NULL; } void insert_node(struct node *node, int data) { if (node == NULL) { printf(\u0026#34;insert failed\\n\u0026#34;); return; } struct node *new_node = (struct node *)malloc(sizeof(struct node)); new_node-\u0026gt;data = data; new_node-\u0026gt;next = node-\u0026gt;next; node-\u0026gt;next = new_node; } void print_node(struct node *node) { if (node == NULL) { printf(\u0026#34;print failed\u0026#34;); return; } struct node *cur = node; while (cur-\u0026gt;next != NULL) { printf(\u0026#34;%d \u0026#34;, cur-\u0026gt;data); cur = cur-\u0026gt;next; } printf(\u0026#34;%d \u0026#34;, cur-\u0026gt;data); printf(\u0026#34;\\n\u0026#34;); } int search_node(struct node *node, int data) { struct node *cur = node; int pos = 0; while (cur-\u0026gt;next != NULL) { if (cur-\u0026gt;data == data) { return pos; } cur = cur-\u0026gt;next; pos++; } return -1; } void clean_node(struct node **node) { if (*node == NULL) { printf(\u0026#34;del failed.\\n\u0026#34;); return; } struct node *cur = *node; struct node *temp = NULL; while (cur-\u0026gt;next != NULL) { temp = cur-\u0026gt;next; free(cur); cur = temp; temp = NULL; } *node = NULL; } void sort_char_array_descend(char arr[], int len) { int i, j, idx; for (i = 0; i \u0026lt; len - 1; i++) { idx = i; for (j = i + 1; j \u0026lt; len; j++) { if (arr[idx] \u0026lt; arr[j]) { idx = j; } } if (idx != i) { char temp = arr[i]; arr[i] = arr[idx]; arr[idx] = temp; } } } void int_to_char_arr(int n, char num[], int len) { int i = 0; bzero(num, len); while (n \u0026gt; 0 \u0026amp;\u0026amp; i \u0026lt; len) { char digit = n % 10; num[len - (i++) - 1] = digit; n /= 10; } } int calc_kaprekar_constant(char num[]) { int ret = 0; int i, j, idx; unsigned long num_len = strlen(num); char *arr = (char *)malloc(num_len * sizeof(char)); for (i = 0; i \u0026lt; num_len; i++) { arr[i] = num[i] - \u0026#39;0\u0026#39;; } int times, n1, n2; int origin_num = 0, next_num = 0; for (n1 = 0, times = 1, i = num_len - 1; i \u0026gt;= 0; times *= 10, i--) { origin_num += (times * arr[i]); } int step_count = 0; struct node *node = NULL; init_node(\u0026amp;node, -1); do { sort_char_array_descend(arr, num_len); /* max digital */ for (n1 = 0, times = 1, i = num_len - 1; i \u0026gt;= 0; times *= 10, i--) { n1 += (times * arr[i]); } /* min digital */ for (n2 = 0, times = 1, i = 0; i \u0026lt; num_len; times *= 10, i++) { n2 += (times * arr[i]); } next_num = n1 - n2; DEBUG$ printf(\u0026#34;%d-%d=%d\\n\u0026#34;, n1, n2, next_num); if (next_num == origin_num || next_num == 0) { DEBUG$ printf(\u0026#34;%d (jump into black hole after step %d)\\n\u0026#34;, next_num, step_count); clean_node(\u0026amp;node); ret = 1; break; } if (search_node(node, next_num) != -1) { DEBUG$ print_node(node); DEBUG$ printf(\u0026#34;%d (infinit loop after %d step)\\n\u0026#34;, next_num, step_count); clean_node(\u0026amp;node); ret = 2; break; } origin_num = next_num; insert_node(node, origin_num); step_count++; int_to_char_arr(next_num, arr, num_len); } while (1); free(arr); arr = NULL; return ret; } int main(int argc, char *argv[]) { /* #define TEST_NODE */ /* #define TEST_PRE */ #ifdef TEST_NODE  struct node *node = NULL; init_node(\u0026amp;node, -1); insert_node(node, 1); insert_node(node, 2); insert_node(node, 3); print_node(node); clean_node(\u0026amp;node); #elif defined(TEST_PRE)  calc_kaprekar_constant(\u0026#34;13\u0026#34;); /* 31-13=18 */ /* 81-18=63 */ /* 63-36=27 */ /* 72-27=45 */ /* 54-45=9 */ /* 90-9=81 */ /* 81-18=63 */ /* \u0026lt;- went to 63 again */ #else  if (argc \u0026gt;= 2) { return calc_kaprekar_constant(argv[1]); } #endif  return 0; }   Test with a Bash Script¶\r1 2 3 4 5 6 7  for num in $(seq $1 $2); do ./kaprekar_constant $num \u0026gt;/dev/null if [ $? == 2 ]; then echo \u0026#34;some number went to infinite loop\u0026#34; exit fi done   Usage: execute ./kaprekar_constant_test.sh 1000 9999, if successful, will output nothing.\nRef.¶\rdebug-pringing-in-c\r↗ \r","n":"Prove Kaprekar Constant With C Program","u":"https://zyprex.github.io/zyprex.blog/2022/prove-kaprekar-constant-with-c-program/"},{"c":"Don\u0026rsquo;t Conform To The Norm¶\rThree concepts that lead you to conform to the norm.\n the individuation. the inaction of others. the scarcity principle.  The Individuation¶\rA person seeing themselves as a part of the bigger society or culture can increase their levels, but this can obscure moral elements.\nThe Inaction of Others¶\rIf other\u0026rsquo;s don\u0026rsquo;t judged your immoral behavior, then it\u0026rsquo;s more likely to occur.\nThe Scarcity Principle¶\rPeople tend to place less value on objects or opportunities that are in abundance rather than those that are rare. But does those rare fitter more ?\n","n":"Dont Conform to the Norm","u":"https://zyprex.github.io/zyprex.blog/2022/dont-conform-to-the-norm/"},{"c":"Stop Nail Biting¶\rNail biting is a compulsive behaviors that can cause a lot of problems. I try to overcome this bad habit, but failed every time.\nHere are some concepts. I hope with the apply of those concepts I could finally get rid of this bad habit.\nHabit Reversal Training¶\r  Phases 1: awareness training\n Identify the habit or the problem behavior you want to break. Recognize when you engage in the behavior, what triggers it. (stress, boredom etc.) Identify the earliest signs of the behavior when you first feel the urge to do it. (early warning training)    Phases 2: competing response training\n substitue a new behavior for the old one that you want to extinguish.    Phases 3: establishing motivation and support\n write down all of the negative consequences of the behavior. Use this list as a reminder for why you need to stick to the plan.    Add-on technique: stimulus control\n Reduce the things in your enviroment that can trigger you behavior. Put blocks in place to make it harder for you to be triggered.    ","n":"Stop Nail Biting","u":"https://zyprex.github.io/zyprex.blog/2022/stop-nail-biting/"},{"c":"How The Phone Network Works¶\rOrigin From: Scishow\nThe Basic Way A Cell Phone Works¶\rCell phones are basically just complicated radios, send radio waves carrying a signal back and forth between radio towers.\nComplicated part\nEncoding data on a radio wave.\nRadio waves have two properties\n Amplitude: how large the wave is. Frequency: the number of times a wave cycles in a given tiem.  We can encoding information by changing both of those properties across a wave. (for instance, we could use a series of high and low frequencies to represent a stream of 1s and 0s, encoding digital data)\nCell phones use a slice of the radio frequency spectrum in 800 to 4000 Megahertz range.\nBandwidth\nBandwidth is the amount of frequencies we can use for a whole network.\nInterface\nIf lots of cell phones all use the same band of frequencies in the same way to communicate with a cell tower, their signals overlap with each other and become garbled.\nRadio waves can add and subtract from one another to create new waves.\nOverview of 1G to 5G¶\rThe \u0026ldquo;gees\u0026rdquo;\nThe letter G in 4G or 5G refers to the generation of technology used for sending radio waves around.\n1G¶\rFDMA: frequency domain multiple access\nDistributing frequencies in cells (a kind of honeycomb pattern), each of those cells uses a difference cell tower or base station to transmit to.\nThe trick is that nearby cells are allocated different frequencies to use, but distant ones can use the same frequencies without overlapping.\n2G¶\rTDMA: time division multiple access\nUse the same channel by chunking signals into bits that take turns.\n3G¶\rCDMA: code division multiple access\nEncoding the signals in such way that they can still be made out distinctly on the other end (the codes are orthogonal, meaning that they can\u0026rsquo;t get mixed up with one another).\n4G¶\rOFDM: orthoganal frequency division multiplexing\nChopes up a single band into small divisions called carriers whose frequencies are less likely to interface with each other.\nICI: Intercell Interference\nSignals interfering at the edge of two cells using the same frequencies.\n5G¶\r5G is a network of what are called \u0026ldquo;ultra-dense networks\u0026rdquo; consisting of lots of smaller cells providing reception to many users.\nThe problem\nMore boundaries, increasing the amount of ICI, lead you cell phone drop reception very often.\n","n":"How the Phone Network Works","u":"https://zyprex.github.io/zyprex.blog/2022/how-the-phone-network-works/"},{"c":"Remap Capslock on Windows¶\rDual key remap is a more clean, safe and powerful way to remap the almost useless capslock key.\nUse \u0026lsquo;dual key remap\u0026rsquo;¶\rThe project home: dual-key-remap\r↗ \rAuto Start \u0026lsquo;dual key remap\u0026rsquo; when windows launch¶\rMake a \u0026lsquo;dual-key-remap.exe\u0026rsquo; shortcut (by press Alt and drag to somewhere) and put it in Startup folder (win + R and input shell:startup you can directly open this folder).\nStop \u0026lsquo;dual key remap\u0026rsquo;¶\rC:\\\u0026gt;tasklist | findstr dual\rdual-key-remap.exe 1556 Console 4 4,148 K\rC:\\\u0026gt;taskkill /pid 1556\rOr: taskkill /im dual-key-remap.exe\n","n":"Remap Capslock on Windows","u":"https://zyprex.github.io/zyprex.blog/2022/remap-capslock-on-windows/"},{"c":"Emacs eglot use jdtls on windows¶\rCAUTION: the newest jdtls does not support java8.\nEnviroment¶\r windows10 Home 21H2 GNU Emacs 28.1 (build 2, x86_64-w64-mingw32)  Requirements¶\r openjdk-8u41-windows-i586\r↗ \r jdt-language-server-0.55.0-20200430002\r↗ \r  Extract \u0026lsquo;openjdk\u0026rsquo; and \u0026lsquo;jdt-language-server\u0026rsquo; somewhere, ensure \u0026lsquo;%JAVA_HOME%\\bin\u0026rsquo; is in PATH.\nConfiguration¶\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  (with-eval-after-load \u0026#34;eglot\u0026#34; (add-to-list \u0026#39;eglot-server-programs `(java-mode . (\u0026#34;java\u0026#34; \u0026#34;-Declipse.application=org.eclipse.jdt.ls.core.id1\u0026#34; \u0026#34;-Dosgi.bundles.defaultStartLevel=4\u0026#34; \u0026#34;-Declipse.product=org.eclipse.jdt.ls.core.product\u0026#34; \u0026#34;-Dlog.level=ALL\u0026#34; \u0026#34;-noverify\u0026#34; \u0026#34;-Xmx256m\u0026#34; \u0026#34;-jar\u0026#34; \u0026#34;c:\\\\SDK\\\\jdt-language-server-0.55.0-202004300028\\\\plugins\\\\org.eclipse.equinox.launcher_1.5.700.v20200207-2156.jar\u0026#34; \u0026#34;-configuration\u0026#34; \u0026#34;c:\\\\SDK\\\\jdt-language-server-0.55.0-202004300028\\\\config_win\u0026#34; \u0026#34;-data\u0026#34; jdtls-cahce-dir ))))   ","n":"Emacs Eglot Use jdtls","u":"https://zyprex.github.io/zyprex.blog/2022/emacs-eglot-use-jdtls/"},{"c":"App Crashed When use android:theme=\u0026quot;@android:style/Theme.Dialog\u0026quot;¶\rFor Android Studio set android theme, in AndroidManifest.xml, correct the android:theme value:\n1 2 3 4  \u0026lt;activity android:name=\u0026#34;.DialogActivity\u0026#34; android:theme=\u0026#34;@style/Theme.AppCompat.Dialog\u0026#34; android:exported=\u0026#34;false\u0026#34;/\u0026gt;   \u0026lsquo;com.android.support.percent\u0026rsquo; with AndroidX¶\rThe new androidx standard didn\u0026rsquo;t compatible with old support packcage.\n无法导入‘com.android.support.percent‘(百分比布局依赖库)的解决方法\r↗ \r\u0026lsquo;getAdapterPosition\u0026rsquo; always return -1¶\rMove it into onBindViewHolder function.\nAdd Local Dependencies¶\rdependencies {\rimplementation fileTree(dir: 'libs', includes: ['*.jar'])\r}\rFile-\u0026gt;Invalidate Caches-\u0026gt;Invalidate and Restart\nOn building APK¶\r Generate Signed APK: Errors while building APK. You can find the errors in the \u0026lsquo;Messages\u0026rsquo; view.\n Enlarge jvm max heap to 256m (I origin set it to 128m)\n org.gradle.jvmargs=-Xmx256m -Dfile.encoding=UTF-8\n ","n":"Android Misc Debug","u":"https://zyprex.github.io/zyprex.blog/2022/android-misc-debug/"},{"c":"Take Care of My Low Memory Machine¶\r Enable Power Save Mode Reduce maximum heap size to 512m Disable parallel compilation Disable unnecessary lint checks (File\u0026gt;Settings\u0026gt;Editor) Reduce maximum heap size available for Gradle. (the org.gradle.jvmargs in gradle.properites is located at project root folder, set it to 128m) Debug on a physical device  Fix up AVD related problem¶\r(1) Add system path\n PANIC: Cannot find AVD system path. Please define ANDROID_SDK_ROOT.\n 1 2  # ~/.profile or ~/.zshenv export ANDROID_SDK_ROOT=$HOME/Android/Sdk   (2) Configure BIOS\n VT-x is disabled in BIOS.\n Enable Intel Virtual Technology in BIOS.\nSadly to say: although AVD successful launched, it\u0026rsquo;s performance is really bad in low memory machine :(.\n","n":"Install Android Studio","u":"https://zyprex.github.io/zyprex.blog/2022/install-android-studio/"},{"c":"Why try SDCC on linux¶\rI try sdcc on linux because I think I could spark off my interst in mcu programming again. The facts are just the opposite, I found all intersting lost to somewhere unconsciously. So I end it by collect old material thoungh I don\u0026rsquo;t think it can help for anybody. Just a record.\nGetting Start¶\rmcu: STC90C52RC\ncompiler: SDCC\nplatform: linux\nPrerequisites¶\r sdcc\r↗ \r stcgal\r↗ \r pip3 install stcgal    Step By Step¶\rCompile sdcc from source:\ncd sdcc\r./configure\rconfigure: error: boost library not found (boost/graph/adjacency_list.hpp).\nsudo pacman -S boost\rconfigure: error: gputils (gpasm, gplink, and gplib) are required but not found. Either install gputils or reconfigure with \u0026ndash;disable-pic14-port and \u0026ndash;disable-pic16-port. configure: error: ./configure failed for device/lib/pic14\nsudo pacman -S gputils\r./configure\rmake\rwait at least 45 minutes\nsudo make install\rTest sdcc compiler with sdcc --version You may see:\nSDCC : mcs51/z80/z180/r2k/r2ka/r3ka/gbz80/tlcs90/ez80_z80/z80n/ds390/pic16/pic14/TININative/ds400/hc08/s08/stm8/pdk13/pdk14/pdk15 4.1.0 #12072 (Linux)\rpublished under GNU General Public License (GPL)\rGenerate Binary File¶\rsdcc main.c\rpackihx main.ihx\rxxd -r -p main.hex main.bin\rDownload Binary File to Flash¶\rIf occur \u0026ldquo;ModuleNotFoundError: No module named \u0026lsquo;stcgal\u0026rsquo;\u0026rdquo;, try, (another way is install \u0026lsquo;stcgal\u0026rsquo; for root user):\nchown \u0026lt;username\u0026gt; /dev/ttyUSB0\rWhen stuck on \u0026lsquo;Waiting for MCU, please cycle power:\u0026rsquo;, maybe you are use chip does not support by stcgal.\nstcgal -P stc89 -p /dev/ttyUSB0 main.bin\rTest code¶\rmain.c¶\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  #include \u0026lt;mcs51/8051.h\u0026gt;void delay() { for (int i = 0; i \u0026lt; 100; ++i) { for (int j = 0; j \u0026lt; 1000; ++j) { } } } int main(void) { P1 = 0xAF; for (;;) { delay(); P1 = ~P1; } return 0; }   makefile¶\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  # LAST MODIFIED : March 23, 2021 # MAKE PROGRAM : make # PLATFORM : unix # DESCRIPTION : this makefile is used to compile mcs51 program # -I/usr/local/share/sdcc/include/ CC := sdcc FLAGS := RM := rm MAIN := main REL := $(patsubst %.c, %.rel, $(filter-out $(MAIN).c, $(wildcard *.c))) DUMP := $(wildcard *.asm *.lst *.rst *.sym *.map *.mem *.lk *.hex *.ihx *.rel) all: $(REL) $(CC) $(MAIN).c $^ packihx $(MAIN).ihx \u0026gt; $(MAIN).hex xxd -r -p $(MAIN).hex $(MAIN).bin %.rel: %.c $(CC) -c $\u0026lt; .PHONY: clean clean: $(RM) $(DUMP)   ","n":"Try SDCC on Linux","u":"https://zyprex.github.io/zyprex.blog/2022/try-sdcc-on-linux/"},{"c":"Connect Internet From Command Line¶\rThe \u0026lt;SSID\u0026gt; is your wifi name.\nOn Windows¶\rConnect to WIFI: netsh wlan connect name=\u0026lt;SSID\u0026gt;\nDisconnect to WIFI: netsh wlan disconnect\nOn Linux¶\rCheck WIFI status: nmcli radio wifi, it should output enabled, or else you will need run nmcli radio wifi on.\nCheck Network status: nmcli d status, nmcli c show\nList WIFI SSID: mncli d wifi list , mncli d wifi rescan\nDelete a WIFI: nmcli c delete \u0026lt;SSID\u0026gt;, nmcli c delete \u0026lt;UUID\u0026gt;\nConnect to new WIFI: nmcli d wifi connect \u0026quot;\u0026lt;SSID\u0026gt;\u0026quot; --ask\nConnect to hidden WIFI: nmcli d wifi connect \u0026quot;\u0026lt;SSID\u0026gt;\u0026quot; hidden yes --ask\nConnect to WIFI: nmcli c up \u0026lt;SSID\u0026gt;, or nmcli c up\nDisconnect to WIFI: nmcli c down \u0026lt;SSID\u0026gt;, or nmcli c down\nnmcli — command-line tool for controlling NetworkManager\r↗ \r","n":"Connect Internet From Command Line","u":"https://zyprex.github.io/zyprex.blog/2021/connect-internet-from-command-line/"},{"c":"Use Macros in C¶\rMacros in C programming language, are notorious for it\u0026rsquo;s extremely unsafe, esoterically hard to debug.\nThus, we should strived to understand its pros and cons.\nFeature of Macros¶\rIn C, macro\u0026rsquo;s main duty is text precessing \u0026ndash; e.g. replace a piece of text with another text, in many other case, they\u0026rsquo;re used to encapsulated function, and in minor case, they can minic some other language\u0026rsquo;s feature, or syntactic sugar.\nExpansion of Macros¶\rDo expansion of macros use gcc with -E [file] option.\nComparison of Macros Pros and Cons¶\rCONS\n The variable defined in macro share same scope near to its used place. No type checking with macros parameters as functions parameters. Macros can\u0026rsquo;t be debugged by debugger.  PROS\n Efficiency \u0026ndash; faster than same function call.  TIPS: prefer to use C99\u0026rsquo;s inline , always_inline keywords   Passing default arguments Debug strings  __FILE__, __LINE__, __func__, __TIME__, __DATE__, __STDC__, __STDC_VERSION__    True Constant variable in C¶\rIn C, the const variables are not true constants, so can\u0026rsquo;t use in switch-case or use them for defined an array\u0026rsquo;s size (C++ can). Enumerations are real consts, but their type is only integer. So, in dired need to define true constants, just use macro.\nExample of Macro Usage¶\rDefined New Macro¶\rSometimes test macro existence before define is a good idea.\n1 2 3  #ifndef M1 #define M1 100 #endif   Brackets Protected¶\rDirectly substituted in code will cause some pretty nasty side effects, because of operator precedence.\n1 2 3  #define MUX(x) (x*x) // ... MUX(x + 1); // incorrect!   Increment / Decrement Operation¶\r1 2 3  #define ABS(x) ((x)\u0026gt;0?(x):-(x)) // ... ABS(x++); // incorrect!   Duplicated Function Call¶\rIf pass functions as macro\u0026rsquo;s parameter, may cause duplicated function call.\n1 2 3  #define MIN(x, y) ((x) \u0026lt; (y) ? (x) : (y)) // ... MIN(x + y, foo(z)); // incorrect!   Multiple Line Macros¶\rBe careful in define multiple line macros. Wrap them in do{}while(0)\n1 2 3 4 5 6 7 8 9  #define MIN(x, y) \\ { \\ if((x) \u0026lt; (y)) \\ return x; \\ else \\ return y; \\ } // \u0026lt;= can\u0026#39;t add semicolon, here. // ... MIN(x, y); // incorrect!   Passing Default Arguments¶\r1 2 3  void fun(a1, a2); #define m_fun_a1(x) fun(x, 2) #define m_fun_a2(x) fun(1, x)   Variadic Macros¶\rNote this type of macros are GCC standard, and may not supported by other compiler.\n1  #define eprintf(format, ...) fprintf(stderr, __VAR_ARGS__)   Stringizing and Concatenation¶\rUse # to stringizing, use ## concatenation, but do not relay on those tricks too much.\n1 2 3 4 5  inline int calc_0(a, b){ return a*b; } inline int calc_1(a, b){ return a/b; } #define calc_x(x, a, b) calc_##x(a, b) // ... calc_x(0, 1, 2);   Ref.¶\r https://pmihaylov.com/macros-in-c/ http://gnu.org/onlinedocs/cpp/Macro-Arguments.html http://gnu.org/onlinedocs/cpp/Macro-Pitfalls.html http://gnu.org/onlinedocs/cpp/Variadic-Macros.html  ","n":"Use Macros in C","u":"https://zyprex.github.io/zyprex.blog/2021/use-macros-in-c/"},{"c":"Reason¶\rtoken-authentication-requirements-for-git-operations\r↗ \rTake Action¶\rUse SSH¶\r Generate Public Key  ssh-keygen -t rsa \u0026quot;mypersonal@email.com\u0026quot; Note: email is optional.\nLogin in Github  Settings -\u0026gt; SSH and GPG keys -\u0026gt; New SSH key\nCopy content in ~/.ssh/id_rsa.pub.\nVerify  ssh -T git@github.com If corrent verified, will see:\nHi xxx! You’ve successfully authenticated, but GitHub does not # provide shell access. Change Remote URL¶\rFirst verify current remote URL.\ngit remote -v Then Change remote\u0026rsquo;s URL from HTTPS to SSH.\ngit remote set-url origin git@github.com:user/repository.git ","n":"Git Security Change","u":"https://zyprex.github.io/zyprex.blog/2021/git-security-change/"},{"c":"Anonymous reprinting this article due to unknown source.\nNagging is the dispiriting, unpleasant, counter-productive but wholly understandable and poignant version of a hugely noble ambition the desire to change other people.\nThere is so much we might fairly want to change about them.\nWe\u0026rsquo;re an entirely imperfect lot and therefore we want other people to be more self-aware, punctual, generous, reliable, introspective, resilient, communicative, profound.\nAt home, we want them to focus more on the sink, the children, the bins, the money and the need to put the phone down and look up.\nAt a macro-dimension, we want people to think more about the suffering of encaged animals the destruction of our habitat and the iniquities of international capitalism.\nMost of us, very far from our ideal selves.\nAnd at the level of the species, we come close to an evolutionary error.\nThe desire to change people is therefore no pathology.\nIt\u0026rsquo;s a clear-sighted recognition of the scale of human wickedness.\nNagging is, in its essence, an attempt at teaching, at getting an idea for improvement from one mind into another.\nBut it\u0026rsquo;s also a version of teaching that has given up hope.\nIt has descended into an attempt to insist rather than invite to coerce rather than charm.\nOne is too panicked by the thought of the unteachable student is ruining one\u0026rsquo;s life to find the inner resources to see it a little more from their point of view.\nIt\u0026rsquo;s one\u0026rsquo;s own suffering that dominates all the available imaginative capacity.\nAnd so one gets straight to the point, gets rid of garlands, omits the honey and says it in plain terms.\n\u0026ldquo;The bins nee attention now.\u0026rdquo;\n\u0026ldquo;Get to the table immediately\u0026rdquo;\n\u0026ldquo;You\u0026rsquo;re a selfish layabout.\u0026rdquo;\n\u0026ldquo;Not there, here \u0026hellip;\u0026rdquo;\nOne isn\u0026rsquo;t wrong. One is really very right, but also very tired and deep down, quite sad.\nLamentably, also, it just doesn\u0026rsquo;t work.\nBy the time one start to humiliating the student, the lesson is over.\nNagging breeds its evil twin, shirking.\nThe other pretends to read the paper, goes upstairs and feels righteous.\nThe shrillness of one\u0026rsquo;s tone gives them all the excuse they need to trust that we have nothing kind or true to tell them.\nOne changes other people only when the desire that they change has not reached an insistent pitch, when we can still bear that they remain as they are.\nAll of us improve only when we have not been badgered or made to feel guilty, only when we have a sense that we are loved and deeply understood for the many reasons why change is so hard for us.\nWe know, of course, the bins need our attention, that we should strive to get to bed earlier and that we have been a disappointment in the couple.\nBut we can\u0026rsquo;t to hear these lessons in an unsympathetic tone.\nWe want tricky children that we are to be indulged for our ambivalence about becoming better people.\nThe same obtuse dynamic is a play at the political level.\nWe know we shouldn\u0026rsquo;t abuse the planet, bend rules or close our hearts to the unfortunate.\nBut we won\u0026rsquo;t do any of the good things if a dour figure wags his finger and delivers stern lectures.\nWe want to be charmed not dragged into goodness.\nThe tragedy of nagging is that its causes are usually so noble and yet that it doesn\u0026rsquo;t work.\nWe nag because we feel that our possession of the truth lets us off having to convey it elegantly.\nIt never does.\nThe solution to nagging isn\u0026rsquo;t to give up trying to get others to do what we want.\nRather, it\u0026rsquo;s to recognise that persuasion always needs to occur in terms that make sense to those who so badly need to be altered.\n","n":"About Nagging","u":"https://zyprex.github.io/zyprex.blog/2021/about-nagging/"},{"c":"Fast cd Keymap in Zsh¶\rTL;DR:\n paste below code to your .zshrc run source ~/.zshrc now you have two keys   Alt + k: go upper directory. Alt + j: undo above action.  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  dir-stack-push(){ export DIR_STACKS=$DIR_STACKS:$PWD # push current path to CD_STACKS cd .. zle reset-prompt # redraw prompt } dir-stack-pop(){ if [[ -z ${DIR_STACKS##*:} ]]; then return # don\u0026#39;t cd to home path fi cd ${DIR_STACKS##*:} # cd last path zle reset-prompt # redraw prompt export DIR_STACKS=${DIR_STACKS%:*} # remove last path } zle -N dir-stack-push zle -N dir-stack-pop bindkey \u0026#39;^[k\u0026#39; dir-stack-push # [Alt + k] bindkey \u0026#39;^[j\u0026#39; dir-stack-pop # [Alt + j]   Ref¶\r https://devhints.io/bash https://unix.stackexchange.com/questions/79897/how-can-i-use-bindkey-to-run-a-script https://stackoverflow.com/questions/52325626/zsh-refresh-prompt-after-running-zle-widget  ","n":"Fast Cd Keymap in Zsh","u":"https://zyprex.github.io/zyprex.blog/2021/fast-cd-keymap-in-zsh/"},{"c":"Keep Away From Social Media¶\rAs an anti-social(the people not on social media), I strongly advised you to keep away from social media.\nThe first point about social media is the addictiveness.\nNobody really wants to spend hours and hours every day, updating their status and seeing what other people think about them. Nobody consciously wants to do that.\nBut those behaviors are themselves-addictive behaviors, what you\u0026rsquo;re trapped in that loop. It\u0026rsquo;s very hard to break out.\nIt\u0026rsquo;s not that we want to go back to some interlink past and Eden before the machines existed. It\u0026rsquo;s that we need to take control of these machines and use them for their proper end.\nThe Fact: 20% People Not Active on Social Media¶\rThe bad thing is that you think people\u0026rsquo;s lives is much more fun than your own life. When I\u0026rsquo;m on the bus or walk through the street, I just see people like zombies.\nAdvantages of Present Face to Face¶\r you can get the feedback, know either stop right there or tell them more you might withhold a certain opinion rather than being kind of rapid-fire you can read the nuance more accurately in the air  The best thing is not to just shoot your mouth off online, if you want save you a touch of elegance.\nThe thing is the world is real whether we want to believe it or not and it\u0026rsquo;s really important for us to have a sense of where we are in that world.\nDeficiency of Social Media¶\rI don\u0026rsquo;t like to use the term \u0026ldquo;social media\u0026rdquo; at the end of the day because it implies that it\u0026rsquo;s designed to promote social behaviors when usually it\u0026rsquo;s designed to promote the amount of attention that we\u0026rsquo;re giving it.\nIn order to grab our attention because there\u0026rsquo;s so much competition design has to appeal to the lower parts of us to the kind of non-rational, automatic, impulsive parts of us, and so this is why we get things like clickbait, like sensationalism , things that appeal to our outrage.\nThere\u0026rsquo;s a whole industry of consultants, psychologists who are are helping designers really punch the right buttons in our brains, so that we do keep coming back for more and we do stay hooked on the products.\nBe aware, their advertising system is not really social platforms.\nConclusion¶\rSince 63% of the global population (4.8 billion people) is not active on social media, it\u0026rsquo;s high time to stop the clever capitalism to kept you on your leash, to stop their robbing your time, physical and mental health.\nThe things that are the most worthwhile and most fulfilling, is the things that you take the most work and spend a lot of time on. Those are their pleasures that are self-actualizing that help you realize a part of yourself you didn\u0026rsquo;t have.\n","n":"Keep Away From Social Media","u":"https://zyprex.github.io/zyprex.blog/2021/keep-away-from-social-media/"},{"c":"Write a Excellent Article¶\r Introducing Ideas Adding Similar Ideas Contrasting Ideas Giving Examples or Evidence Explaining Results Sequencing or Side-effect Providing Explanations Sharing Experience Drawing Conclusions or Introducing Your Opinion  ","n":"Write a Excellent Article","u":"https://zyprex.github.io/zyprex.blog/2021/write-a-excellent-article/"},{"c":"Side Effect of Negative¶\r fear the future get stuck in the past dwell on mistakes expect fast results stop believing in yourself give up the right fear failure more than desire success believe in my weaknesses feel the world owes my something resist change assume my problems are unique see failure as the signal to turn back feel it have something to loose overwork feel sorry for myself never visualize what is possible  ","n":"Side Effect of Negative","u":"https://zyprex.github.io/zyprex.blog/2021/side-effect-of-negative/"},{"c":"Errors About Missing Include Files¶\rWhen I try to use clang compile c code on windows with mingw32-w64, The error information is:\nclang: warning: unable to find a Visual Studio installation;\rtry running Clang from a developer command prompt [-Wmsvc-not-found]\rtest.c:1:10: fatal error: 'stdio.h' file not found\r#include \u0026lt;stdio.h\u0026gt;\r^~~~~~~~~\r1 error generated.\rUse clang -v you can see Target: x86_64-pc-windows-msvc and use gcc -v, print the target is x86_64-w64-mingw32.\nUse Correct Compile Flags¶\rOn Windows, there are two toolchains worth mentioning: the Visual C++ toolchain, and the MinGw toolchain.\nActually, clang doesn\u0026rsquo;t ship with its own complete toolchain. It always integrates with whatever standard C/C++ libs and headers the native platform uses.\nSolution: To compile successfully, you need to know your compiler target (for me it is x86_64-w64-mingw32), then use target flag as clang --target=x86_64-w64-mingw32 test.c\nPersistent Compile Flags¶\rCreate a file called compile_flags.txt. This should contain one argument per line. The same flags will be used to compile any file.\nExample:\n--target=x86_64-w64-mingw32\rAlso see the compile_commands.json specification\r↗ \r.\nSome Target Architectures¶\rarm-none-eabi\rarmv7a-none-eabi\rarm-linux-gnueabihf arm-none-linux-gnueabi\ri386-pc-linux-gnu x86_64-apple-darwin10\ri686-w64-windows-gnu # same as i686-w64-mingw32\rx86_64-pc-linux-gnu # from ubuntu 64 bit\rx86_64-unknown-windows-cygnus # cygwin 64-bit\rx86_64-w64-windows-gnu # same as x86_64-w64-mingw32\ri686-pc-windows-gnu # MSVC\rx86_64-pc-windows-gnu # MSVC 64-BIT\r see cross compiilation\r↗ \rsee clangd config\r↗ \r","n":"Clang Compile Error","u":"https://zyprex.github.io/zyprex.blog/2021/clang-compile-error/"},{"c":"Process learning¶\rFocus on the process of learning and not the outcome, a product too far away to motivatie you. To optimize process learning, set a fixed study time in which you focus on the material for say 25 minutes a day. In that time, don\u0026rsquo;t try to reach a certain goal, just learn for the exact amount of time that you set yourself, then stop. Process learning will help you feel more relaxed during your study, and give you a sense of accomplishment once you are done.\n13 tips¶\r Spaced repetition: study short but often, it is more productive to study regulary with sleeping breaks in between. Practice something for 15 minutes every day. Find your own style: watching videos, study with friends or study alone. Good night\u0026rsquo;s sleep: sleep and dreams are vital to processing and storing new information. Focus: protect yourself from distraction. Pomodoro technique: (for bord task only) Hard stuff first: control willpower Exercise, meditation and converse: grow your brain, lead to the creation of new neurons inside your brain and therefore grow its potential. Go places: create deeper memories by learning in a richer environment. Take fun seriously: find a fun way to practice. Space your studies: in order to remember things for a longer time, repeat the material in spaced intervals. 30% read 70% recite Instant self-test: after you study, finish up with a quick quiz. It\u0026rsquo;s much harder for your brain to reflect than to read, that extra effort creates deeper traces in your memory. Don\u0026rsquo;t force it: you cannot force yourself to be motivated just like you can\u0026rsquo;t tell someone else to be hungry.  ","n":"Learning Tips","u":"https://zyprex.github.io/zyprex.blog/2021/learning-tips/"},{"c":"BuJo aka. \u0026ldquo;Bullet Journal\r↗ \r\u0026rdquo;, is a rapid logging technique.\nNotations¶\r   symbol denotation explain     ● Tasks Task incomplete   × Tasks Task complete   \u0026gt; Tasks Task Migrated into collection   \u0026lt; Tasks Task scheduled into Future Log   - Notes Things you don\u0026rsquo;t want to forget   ○ Events Noteworth moments in time   * Signifier High priority1   ! Signifier Great ideas, Inspiration    Start BuJo¶\rI love to keep all things simplicity, i.e. KISS principle. So I only to choose part of core preception on BuJo rather than to use complete one.\nI use five notations, \u0026ldquo;●\u0026rdquo;, \u0026ldquo;×\u0026rdquo;, \u0026ldquo;\u0026gt;\u0026rdquo;, \u0026ldquo;-\u0026rdquo;, \u0026ldquo;○\u0026rdquo;. Here are some reason why I turn down others.\nThe \u0026ldquo;\u0026lt;\u0026rdquo; may be forget after I complete the note, because each note should be ephemeral for my daily routines.\nThe \u0026ldquo;*\u0026rdquo; will aggravated my procarstination because it require extra energy (limited and precious willpower).\nThe \u0026ldquo;!\u0026rdquo;, not standout enough for a genius insight.\nSome important rule:\n only keep yesterday\u0026rsquo;s note. before start today\u0026rsquo;s note, review yesterday\u0026rsquo;s note. each note should be casually, it can\u0026rsquo;t do heavy tasks, just do micro tasks. do not sad to your squiggle.    \u0026ldquo;Use it sparingly. If everything is a priority, nothing is.\u0026rdquo; \u0026#x21a9;\u0026#xfe0e;\n   ","n":"Bullet Journal","u":"https://zyprex.github.io/zyprex.blog/2021/bullet-journal/"},{"c":"Draw chart use javascript canvas, official site https://www.chartjs.org/\nLine¶\rnew Chart(\"b394ed42cffe8973512d83d48ca57ade\", { type: 'line', data: { labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'], datasets: [{ label: 'My First dataset', backgroundColor: '#ff00ff', borderColor: '#cc0000', fill: false, data: [0, 10, 5, 2, 20, 30, 45] }, { label: 'My Second dataset', backgroundColor: '#ff00ff', borderColor: '#0000cc', fill: false, data: [0, 9, 5, 3, 30, 20, 55] }] }, options: { title: { display: true, text: 'Custom Chart Title' }, scales: { xAxes: [{ display: true, scaleLabel: { display: true, labelString: 'Month' } }], yAxes: [{ display: true, scaleLabel: { display: true, labelString: 'Value' } }] } } } );\rBar¶\rnew Chart(\"85c79a68a3ab98afbebc6ad73755fbc2\", { type: 'bar', data: { labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'], datasets: [{ label: 'My First dataset', backgroundColor: '#ffffff00', borderColor: '#cc0000', borderWidth: 2, data: [26,1,15,12,20,30,45], }] } } );\rRadar¶\rnew Chart(\"fcc4d7c537a78f60170d8bfd5e9e60bb\", { type: 'radar', data: { labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'], datasets: [{ label: 'My First dataset', backgroundColor: '#ff000040', borderColor: '#cc0000', borderWidth: 2, data: [26,1,15,12,20,30,45], }] } } );\rDoughnut¶\rnew Chart(\"dd2d33ce9ccdaadbbb771d6d68adddae\", { type: 'doughnut', data: { labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'], datasets: [{ label: 'My First dataset', backgroundColor: ['#ff000040','#0000ff40','#00ff0040','#ffff0040','#ff00ff40','#00ffff40','#f0f0f040'], borderColor: '#cccccc', borderWidth: 1, data: [26,1,15,12,20,30,45], }] } } );\rPie¶\rnew Chart(\"766be1b0915fd89a7630bd1d53e78eba\", { type: 'pie', data: { labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'], datasets: [{ label: 'My First dataset', backgroundColor: ['#ff000040','#0000ff40','#00ff0040','#ffff0040','#ff00ff40','#00ffff40','#f0f0f040'], borderColor: '#cccccc', borderWidth: 1, data: [26,1,15,12,20,30,45], }] } } );\rPolar Area¶\rnew Chart(\"e8de3659b292f6b7dd60a94ef2908905\", { type: 'polarArea', data: { labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'], datasets: [{ label: 'My First dataset', backgroundColor: ['#ff000040','#0000ff40','#00ff0040','#ffff0040','#ff00ff40','#00ffff40','#f0f0f040'], borderColor: '#cccccc', borderWidth: 1, data: [26,1,15,12,20,30,45], }] } } );\rBubble¶\rnew Chart(\"213d5ac84a8fc49f1fa45fce5cfb41e8\", { type: 'bubble', data: { labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'], datasets: [{ label: 'My First dataset', backgroundColor: '#ff000040', borderColor: '#cccccc', borderWidth: 1, data: [{\"x\":20,\"y\":30,\"r\":15},{\"x\":40,\"y\":10,\"r\":10}], }] } } );\rScatter¶\rnew Chart(\"b98348f216cb778a88d4fcc9efb17df6\", { type: 'bubble', data: { labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'], datasets: [{ label: 'My First dataset', backgroundColor: '#ff000040', borderColor: '#cccccc', borderWidth: 1, data: [ {\"x\":-10,\"y\":0}, {\"x\":0,\"y\":10}, {\"x\":10,\"y\":50} ], }] } } );\rMixed Chart¶\rnew Chart(\"65fab51f1a7403437beb05fb03e96534\", { type: 'bar', data: { labels: ['January', 'February', 'March', 'April'], datasets: [{ label: 'Bar Dataset', backgroundColor: '#ff000040', data: [10, 20, 30, 40] }, { label: 'Line Dataset', backgroundColor: '#ff000040', borderColor: '#00ff0040', fill: false, data: [50, 40, 50, 50], type: 'line' }] } } );\r","n":"ChartJs Notes","u":"https://zyprex.github.io/zyprex.blog/2021/chartjs-notes/"},{"c":"Git¶\rinstall git\r↗ \rknow terms¶\r   Name Desc.     working directory (tree) your files entity   stash store latest changes which may leads to conflict   staging area (stage or index) diff record   repository (repo) contains all working fruits for you   SHA (commit id) unique hash commit id    help your self¶\rgit \u0026lt;cmd\u0026gt; --help view command\u0026rsquo;s detail.\nset up personal information¶\rgit config --global user.name \u0026quot;your name\u0026quot;\rgit config --global user.email \u0026quot;your email\u0026quot;\rgit config --global core.editor \u0026quot;vim\u0026quot;\rgit config --global color.ui true\rsave your password¶\rgit config --global credential.helper store\rgit config --global credential.helper 'cache --timeout=3600'\rfirst commit¶\rgit init\r# create [file], edit it\rgit add [file]\rgit commit -m \u0026quot;first commit\u0026quot;\rgit commit -v\rfile ops¶\rgit add .\rgit rm [file] # remove from tree\rgit rm --cached [file] # remove from stage\rgit rm -f [file] # remove from stage and tree\rgit mv [old] [new]\rgit commit -m \u0026quot;message\u0026quot;\rsee what is changed¶\rgit status\rgit diff [file] # diff from stage\rgit diff [--cached|--staged][HEAD|SHA]\rgit diff [SHA1|SHA2]\rgit log --pretty=oneline\rgit blame \u0026lt;file\u0026gt; [-L line1,+len]\rundo and redo¶\rgit checkout -- [file] # check out from stage\rgit commit -ammend -m 'Fixxes bug #43'\rgit reflog # show SHA\rgit reset --soft [SHA] # repo -\u0026gt; SHA\rgit reset --mixed [SHA] # stage \u0026amp; repo -\u0026gt; SHA\rgit reset --hard [SHA] # tree \u0026amp; stage \u0026amp; repo -\u0026gt; SHA\rbranch¶\rnew branch¶\rgit branch [new] [SHA|tag]\rgit checkout -b [new] [SHA|tag]\rswitch to branch¶\rgit branch [-a]\rgit checkout [branch]\rgit switch [branch]\rsort branch¶\rgit branch -m [new_name]\rgit merge [other_newer]\rgit rebase [branch]\rgit rebase [branch] [to_branch]\rgit cherry-pick [SHA1] [SHA2] [SHA3]\rgit rebase -i [SHA]\rdelete branch¶\rgit branch -d [which]\rgit push -d origin [remote_branch]\rtemp branch¶\rgit stash\rgit switch [branch_B]\r# ... do sth.\rgit switch [branch_A]\rgit stash pop\rgit stash list\rgit stash clear\rgit stash pop stash@{2}\rGithub¶\rregister in github\r↗ \rlink to remote repo¶\r create new repo on github. add one commit in your local repo.  git remote add origin main\rgit push -u origin main\rThen, next time use git push origin main\nget new update from remote repo¶\rgit fetch # Update 'origin master' from remote\rgit pull # = git fetch + git merge\rgit pull --all # Fetch all remotes\rregret after push¶\rgit revert [SHA]\rgit push [-all]\rtag¶\rgit log --pretty=oneline --abbrev-commit\rgit tag # local tags\rgit ls-remote --tag # remote tags\rgit tag \u0026lt;tagname\u0026gt; [-m\u0026quot;\u0026lt;msg\u0026gt;\u0026quot;][SHA] # create tag\rgit tag -d \u0026lt;del_tagname\u0026gt; # del tag\rgit push origin \u0026lt;tagname\u0026gt; # push tag\rgit push origin --tags # push all tag\rgit push -d origin \u0026lt;remote_tag\u0026gt; # del tags\rProblem¶\rgit clone¶\rError:\n \\302\\226git@github.com: Permission denied (publickey). fatal: Could not read from remote repository.\n Solution:\nRegenerate SSH keys.\ngit add¶\rError:\n LF will be replaced by CRLF\n Causes:\nuse unix format file on windows.\nSolution:\nuse tool \u0026ldquo;unix2dos\u0026rdquo;, convert LF to CRLF. or change autocrlf settings:\ngit config --global core.autocrlf false # default is true\rgit rm¶\rError:\n git rm - fatal: pathspec did not match any files\n Causes:\nunknow.\nSolution:\ngit add .\rgit rm -f [files]\rgit remote add¶\rError:\n git remote add origin \u0026lt;your_git:account\u0026gt; fatal: remote origin already exists.\n Causes:\nunknow\nSolution:\ngit remote rm origin\rgit pull¶\rError:\n commit your changes or stash them before you can merge.\n Causes:\nlocal file contains unpushed changes.\nSolution:\n stash them  git stash\rgit pull\rgit stash pop\rgit diff\rdiscard local changes  git reset --hard\rgit pull\rgit push¶\rError:\n git push origin master error: failed to push some refs to\n Causes:\nforgot to synchronized remote repo before push.\nSolution:\n use git push -f. merge from remote repo  git pull --rebase origin main\rgit push -u main\rError:\n fatal: could not read Username for \u0026lsquo;https://github.com\u0026rsquo;: No such file or directory\n Causes:\ncredential expired!\nSolution:\nreinstall credential or upgrade git or use ssh.\nError:\n fatal: unable to access \u0026lsquo;https://github.com/NNN/XXXX.git/': Failed to connect to 172.0.0.7 port YYYY: Timed out\n Causes:\nmay thanks to GFW :)\nSolution:\ntime is the key. git clone then git push.\nError:\n Failed to connect to github.com port 443: Timed out\n Causes:\nalso thanks to GFW :)\nSolution:\ndo it later.\nError:\n fatal: unable to access \u0026lsquo;https://github.com/NNN/XXXX.git/': OpenSSL SSL_read: Connection was reset, errno 10054\n Causes:\nI don\u0026rsquo;t Know\nSolution:\npush again.\ngit rebase -i¶\rError:\n main|rebase (1|1)\n Causes:\nyour rebase action is on the way.\nSolution:\ngit add .\rgit rebase --continue\ror use rebase --abort exit rebase\nAbout .gitingore¶\rGit Message Template (private-use)¶\r F: feat N: new B: fix M: change D: docs R: refactor S: style :: chore  defined your own git message template file , write below lines to ~/.gitconfig:\n[commit]\rtemplate = ~/.gitmessage\rsee my .gitmessage here\r↗ \rOpen Source License¶\ryou can choose your OSL in http://choosealicense.online/\r↗ \rSearch On Github¶\r in:name [repository name] in:readme [some keyword] in:descrition [some keyword] stars:\u0026gt;100 forks:\u0026gt;10 topic:c language:c pushed: \u0026gt; YYYY-MM-DD  Further Reading¶\r git cheat sheet\r↗ \r GitHub 秘籍\r↗ \r gitmoji\r↗ \r Git 教程\r↗ \r Using Git\r↗ \r Git 徽标\r↗ \r git branch\r↗ \r git magic\r↗ \r  And More \u0026hellip;¶\r git pull request git submodules gitingore git grep patch \u0026lt; diff  ","n":"Git and Github Notes","u":"https://zyprex.github.io/zyprex.blog/2021/git-and-github-notes/"},{"c":"https://katex.org/docs/supported.html\n分数 $\\frac{1}{3}$ $1 \\over 3$\n$\\frac{1}{3}$ $1 \\over 3$\r 开方 $\\sqrt{2} \\sqrt[n]{3}$\n$\\sqrt{2} \\sqrt[n]{3}$\r 对数运算符 $\\log \\ln \\lg$\n$\\log \\ln \\lg$\r 省略号 $f(x_1,x_2,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2$\n$f(x_1,x_2,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2$\r 矢量 $\\vec{a} \\cdot \\vec{b} = 0$\n$\\vec{a} \\cdot \\vec{b} = 0$\r 关系运算符 $ \\pm \\times \\div \\mid \\nmid \\cdot \\circ \\ast \\bigodot \\bigotimes \\bigoplus \\leq \\geq \\neq \\approx \\equiv \\sum \\prod \\coprod $\n$ \\pm \\times \\div \\mid \\nmid \\cdot \\circ \\ast \\bigodot \\bigotimes\r\\bigoplus \\leq \\geq \\neq \\approx \\equiv \\sum \\prod \\coprod $\r 集合运算符 $ \\emptyset \\in \\notin \\subset \\supset \\subseteq \\supseteq \\bigcap \\bigcup \\bigvee \\bigwedge \\biguplus \\bigsqcup $\n$ \\emptyset \\in \\notin \\subset \\supset \\subseteq \\supseteq \\bigcap \\bigcup \\bigvee\r\\bigwedge \\biguplus \\bigsqcup $\r 逻辑运算符 $ \\because \\therefore \\forall \\exists \\not= \\not\u0026gt; \\not\\subset \\neg $\n$ \\because \\therefore \\forall \\exists \\not= \\not\u0026gt; \\not\\subset \\neg $\r 三角运算符 $ \\bot \\angle 30^\\circ \\sin \\cos \\tan \\cot \\sec \\csc $\n$ \\bot \\angle 30^\\circ \\sin \\cos \\tan \\cot \\sec \\csc $\r 矩阵 vmatrix ||、Bmatrix{}、pmatrix()、bmatrix[]\n$$ \\begin{bmatrix} 1 \u0026amp; x \u0026amp; x^2 \\\\ 1 \u0026amp; y \u0026amp; y^2 \\\\ 1 \u0026amp; z \u0026amp; z^2 \\end{bmatrix} $$\n$$\r\\begin{bmatrix}\r1 \u0026amp; x \u0026amp; x^2\r\\\\\\\\ 1 \u0026amp; y \u0026amp; y^2\r\\\\\\\\ 1 \u0026amp; z \u0026amp; z^2\r\\end{bmatrix}\r$$\r 分段函数 $$ f(x) = \\begin{cases} 0 \u0026amp; \\text{x=0} \\\\ 1 \u0026amp; \\text{x!=0} \\end{cases} $$\n$$\rf(x) = \\begin{cases}\r0 \u0026amp; \\text{x=0}\r\\\\\\\\ 1 \u0026amp; \\text{x!=0}\r\\end{cases}\r$$\r 微积分运算符 $\\int_0^1 x^2 {\\rm d}x\\ \\ \\ \\lim_{n \\rightarrow +\\infty} \\frac{1}{n(n+1)}$ $ \\int \\iint \\iiint \\oint \\lim \\infty \\nabla $\n$\\int_0^1 x^2 {\\rm d}x\\ \\ \\ \\lim_{n \\rightarrow +\\infty} \\frac{1}{n(n+1)}$\r$ \\int \\iint \\iiint \\oint \\lim \\infty \\nabla $\r 戴帽符号 $ \\hat{y} \\check{y} \\breve{y} $\n$ \\hat{y} \\check{y} \\breve{y} $\r 连线符号 $\\overline{a+b+c+d}$ $\\underline{a+b+c+d}$ $\\overbrace{a+\\underbrace{b+c}_{1.0}+d}^{2.0}$\n$\\overline{a+b+c+d}$\r$\\underline{a+b+c+d}$\r$\\overbrace{a+\\underbrace{b+c}_{1.0}+d}^{2.0}$\r 箭头符号 $ \\uparrow \\downarrow \\Uparrow \\Downarrow \\rightarrow \\leftarrow \\Rightarrow \\Leftarrow \\longrightarrow \\longleftarrow \\Longrightarrow \\Longleftarrow $\n$ \\uparrow \\downarrow\r\\Uparrow \\Downarrow\r\\rightarrow \\leftarrow\r\\Rightarrow \\Leftarrow\r\\longrightarrow \\longleftarrow\r\\Longrightarrow \\Longleftarrow $\r 显示大号的括号或分隔符时，用 \\left 和 \\right 命令， $f(x,y,z) = 3y^2z \\left( 3+\\frac{7x+5}{1+y^2} \\right)$\n$f(x,y,z) = 3y^2z \\left( 3+\\frac{7x+5}{1+y^2} \\right)$\r 转义字符  \\空格 \\# \\$ \\% \\\u0026amp; \\_ \\{ \\}\n字体转换 要对公式的某一部分字符进行字体转换，可以用 {\\rm 需转换的部分字符} 命令，其中 \\rm 可以参照下表选择合适的字体。\n1 2 3 4 5  \\rm 罗马体 \\it意大利体 \\bf 黑体 \\cal花体 \\sl 倾斜体 \\sf等线体 \\mit 数学斜体 \\tt打字机字体 \\sc 小体大写字母   取模 取模 有两个命令：\\bmod 用于二元运算\u0026quot;a mod b\u0026quot;; 而\\pmod 则用于模的方程。 $a \\bmod b$，$ x \\equiv a \\pmod {b}$\n$a \\bmod b$，$ x \\equiv a \\pmod {b}$\r 空格\n两个quad空格 a \\qquad b a \\qquad b 两个m的宽度\rquad空格 a \\quad b a \\quad b 一个m的宽度\r大空格 a\\ b a\\ b 1/3m宽度\r中等空格 a\\;b a\\;b 2/7m宽度\r小空格 a\\,b a\\,b 1/6m宽度\r没有空格 ab ab\\, 紧贴 a\\!b a\\!b 缩进1/6m宽度\r\\quad、1em、em、m 代表当前字体下接近字符‘M’的宽度（approximately the width of an \u0026ldquo;M\u0026rdquo; in the current font）\n数学公式中写入非数学变量的字符（non-mathematical elements），使用 Roman 字体，而不是数学变量的斜体（italics），例如 “if ”， 使用\\mbox{ if }\n","n":"Katex Notes","u":"https://zyprex.github.io/zyprex.blog/2021/katex-notes/"},{"c":"mermaid-js\r↗ \ris a js library which can generation of diagram and flowchart from text in a similar manner as markdown.\nFlowcharts¶\rhttps://mermaid-js.github.io/mermaid/#/flowchart\ngraph LR A(Round) --|normal arrow| B{Decision} B --- |open link| C[normal] B -.-|dotted a| D([stadium]) B ==|thick link| E([subroutine]) B --|four| F[(cylindrical database)] B --|five| G((circle)) B --|six| H{{hexagon}} B --|eight| I[/parallelogram/] B --|nine| J[\\parallelogram alt\\] B --|ten| k[\\parallelogram alt\\] B --|ten| L[/trapezoid\\] B --|ten| M[\\trapezoid alt/] \rgraph TB A \u0026 B -- C \u0026 D -- E \rSequence diagrams¶\rhttps://mermaid-js.github.io/mermaid/#/sequenceDiagram\nsequenceDiagram participant A as Alice participant J as John A-J: Hello John, how are you? J--A: Great! A-)J: See you later! \rUser journey¶\rhttps://mermaid-js.github.io/mermaid/#/user-journey journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me \rGantt¶\rhttps://mermaid-js.github.io/mermaid/#/gantt\ngantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid excludes weekends %% (`excludes` accepts specific dates in YYYY-MM-DD format, days of the week (\"sunday\") or \"weekends\", but not the word \"weekdays\".) section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page :20h Add another diagram to demo page :48h \rPie chart¶\rhttps://mermaid-js.github.io/mermaid/#/pie\npie title Key elements in Product X \"Calcium\" : 42.96 \"Potassium\" : 50.05 \"Magnesium\" : 10.01 \"Iron\" : 5 \r","n":"MermaidJs  Notes","u":"https://zyprex.github.io/zyprex.blog/2021/mermaidjs-notes/"},{"c":"Hugo maybe the world’s fastest static website generate engine, stand out for it\u0026rsquo;s speed.\nBefore you go, make sure:\n install git go env (optional) install hugo add hugo in your path  TL;DR¶\rHugo\u0026rsquo;s concentrated quick start.\n1 2 3 4 5 6 7 8 9 10 11 12  # start of your site in a folder \u0026#39;quickstart/\u0026#39; hugo new site quickstart # apply theme cd quickstart git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke # create first post hugo new posts/my-first-post.md hugo server -D # enter http://localhost:1313/ in address bar # preview site in browser # host site ... (have plenty of choose)   Overview of Site\u0026rsquo;s Architecture¶\r|- archetypes/\r| |\r| `- default.md\r|- config.toml\r|- content/\r|- data/\r|- public/ \u0026lt;---(run 'hugo' to generate)\r|- layouts/\r|- static/\r`- themes/\rLayouts¶\rIn front matter1 if you defined layout: \u0026quot;about\u0026quot;, then hugo will find /layouts/default/about.html as a template for your page, otherwise it is single.html. BTW: if you also defined type: posts, hugo will give the highest priority of template look order to /layouts/posts/about.html.\nArchetypes¶\rThe file archetypes/default.md show below.\n1 2 3 4 5  --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} draft: true ---   This is the default \u0026ldquo;front matter\u0026rdquo; template for new page. For publish, set draft: false or delete this line.\nfrontMatter example¶\rhugo\u0026rsquo;s front matter can be written in yaml json or toml format.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  ---title:\u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34;\u0026#34; | title }}\u0026#34;date:{{.Date }}lastmod:{{.Date }}description:\u0026#34;...\u0026#34;publishDate:expiryDate:2099-01-01draft:truetags:[\u0026#34;t1\u0026#34;,\u0026#34;t2\u0026#34;,\u0026#34;t3\u0026#34;]categories:\u0026#34;c1\u0026#34;keywords:[\u0026#34;k1\u0026#34;,\u0026#34;k2\u0026#34;]isCJKLanguage:trueweight:40aliases:type:layout:toc:true---  see more at hugo front-matter\r↗ \rContent¶\rThis folder store site content markdown file, each md file has:\n layout (default template is layouts/_default/single.html) type (top level folder name, aka reserved section) kind (kind of each page)  home (most top level index.html) page (each of markdown file) section (each accessible folder name, if it not rectified by _index.md) taxonomy (taxonomies refers to all terms, including \u0026lsquo;tags\u0026rsquo; and \u0026lsquo;categories\u0026rsquo;) term (the \u0026lsquo;tags\u0026rsquo; is a term)    See hugo - directory structure\r↗ \rfor more detail.\nConfig.toml¶\rOrigin conifg.toml looks like:\n1 2 3  baseURL = \u0026#34;http://example.org/\u0026#34; languageCode = \u0026#34;en-us\u0026#34; title = \u0026#34;My New Hugo Site\u0026#34;   Some useful configure are here:\n1 2 3 4 5 6 7 8 9  newContentEditor = \u0026#34;vim\u0026#34; paginate = 10 summaryLength = 100 hasCJKLanguage = true enableEmoji = true enableRobotsTXT = true minify = true [markup.goldmark.renderer] unsafe= true # write inline HTML   Themes¶\rRun hugo new theme blank will generate a new theme skeleton for you, it located in themes folder.\nThemes Structure¶\r|- LICENSE\r|- archetypes/\r| |\r| `- default.md\r|- layouts/\r| |- 404.html\r| |- index.html\r| |- _default/\r| | |- baseof.html\r| | |- list.html\r| | `- single.html\r| `- partials/\r| |- head.html\r| |- header.html\r| `- footer.html\r|- static/\r| |- css/\r| `- js/\r`- theme.toml\rFocus on Essence Files¶\r   File name Role     theme.toml your theme information   index.html render home   baseof.html main frame   list.html render section   single.html render page   head.html same as \u0026lt;head\u0026gt; tag   header.html site\u0026rsquo;s header   footer.html site\u0026rsquo;s footer    Tips For Write Theme¶\rEnable TableofContents¶\rIn your content page\u0026rsquo;s front matter define toc: true, then in layouts/_default/single.html put three line:\n{{ if .Params.toc }}\r{{ .TableofContents }}\r{{ end }}\r Easy Menu¶\rPaste below line in your config.toml.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [menu] [[menu.main]] identifier = \u0026#34;home\u0026#34; name = \u0026#34;HOME\u0026#34; url = \u0026#34;/\u0026#34; weight = -199 [[menu.main]] identifier = \u0026#34;tags\u0026#34; name = \u0026#34;TAGS\u0026#34; url = \u0026#34;/tags/\u0026#34; weight = -199 [[menu.main]] identifier = \u0026#34;categories\u0026#34; name = \u0026#34;CATEGORIES\u0026#34; url = \u0026#34;/categories/\u0026#34; weight = -198   go to directory layouts/partials/, create new file menu.html:\n1 2 3  {{- range .Site.Menus.main -}} \u0026lt;a href=\u0026#34;{{ .URL }}\u0026#34;\u0026gt;{{ .Name }}\u0026amp;nbsp;\u0026lt;/a\u0026gt; {{- end -}}   Use Partials¶\rassume there had layouts/partials/menu.html , include in index.md:\n1  {{- partial \u0026#34;menu.html\u0026#34; . -}}   start server to see the change!\nUse Template¶\rthe template function is old fashion of partials, now it used to call hugo\u0026rsquo;s internal partial\r↗ \r1  {{- template \u0026#34;_internal/opengraph.html\u0026#34; . -}}   Preview Site On Smart Phone¶\rAssume your computer\u0026rsquo;s ipv4 is 192.168.X.XXX:\n1  hugo server -D --bind 192.168.X.XXX --baseURL http://192.168.X.XXX/   If you find static files not refresh, press Ctrl+F5, or go to settings and clear browser caches.\nCompare _index.md \u0026amp; index.md¶\rin a short , _index.md create a branch, index.md create a leaf page end. see more at page bundles\r↗ \r.\nUser Defined Highlight CSS¶\rfirst on your config.toml:\n1  pygmentsUseClasses = true   then:\n1  hugo gen chromastyles --style=native \u0026gt; syntax.css   include syntax.css file in single.html.\nShortcodes¶\rSee hugo shortcodes\r↗ \rRef.¶\rhugo doc\r↗ \rhugo community\r↗ \r  store meta data for each page. \u0026#x21a9;\u0026#xfe0e;\n   ","n":"Hugo Notes","u":"https://zyprex.github.io/zyprex.blog/2021/hugo-notes/"},{"c":"Prelogue¶\rrepresent markdown syntax, and use it to see how the style looks like in hugo\u0026rsquo;s site\nHeader¶\ruse n\u0026rsquo;th \u0026lsquo;#\u0026rsquo; prefix to present nth head\r+\rhead1 head2 head3 head4 head5 head6 head1 head2 # head1\r## head2\r### head3\r#### head4\r##### head5\r###### head6\rhead1\r=====\rhead2\r-----\r \r\rText¶\rtext emphasis can be italic or bold or italic bold or strikethrough\n _italic_ or __bold__ or ___italic bold___ ~~strikethrough~~\r*italic* or **bold** or ***italic bold***\r Lists¶\rordered¶\rnumbered lists:\n One Two Three  1. One\r1. Two\r1. Three\runordered¶\reach lists item start with \u0026lsquo;*\u0026rsquo; or \u0026lsquo;-\u0026rsquo; or \u0026lsquo;+\u0026rsquo; and a space:\n One Two Three  - One\r- Two\r- Three\rnested list in context¶\rthis is line before nested list, use two space indent to create sublist\n One  One One One Two One Three   Two  Two One Two Two Two Three   Three  Three One  Three One One  Three One One One        this is line after nested list\nTask Lists¶\r checked unchecked  - [x] checked\r- [ ] unchecked\rBlockquotes¶\radd a (\u0026gt;) in front of a paragraph to create blockquote.\n blockquote\nanother line\n the blockquote can nested use \u0026lsquo;\u0026gt;\u0026gt;\u0026rsquo; or so on.\n\u0026gt; blockquote \u0026gt; another line\rCode¶\rinline¶\rinline code wrap by (`)\ninline `code` wrap by (`)\r indent¶\rindent two tab width also make a code block\nfence¶\ruse three (`) fence highlight your code\n1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;html document skeleton\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   and code block with unknow language\n# |__aAbBcCdDeEfFgGhHiIjJkKlLmMnN\r# oOpPQqrRsStTuUvVwWxXyYzZ\rrun:\r\u0026lt;data\u0026gt; arr=[1234567890,!@#$%^\u0026amp;*\u0026quot;'\\.?/];\rfor i in arr { print(i); }\rLinks¶\rlink to this site\u0026rsquo;s home\r\ror link to github\r↗ \rwebsite, don\u0026rsquo;t put spaces in the middle of a URL.\nlink to this site's [home](/ \u0026quot;my home page\u0026quot;) or\rlink to [github](https://github.com/ \u0026quot;Github.com\u0026quot;) website\rImages¶\rImage:http://browser9.qhimg.com/bdm/800_600_100/t01bbd94b90e850d1d3.jpg\rImage:https://b.zol-img.com.cn/sjbizhi/images/12/208x312/1607322405927.jpg\r![sample](http://browser9.qhimg.com/bdm/800_600_100/t01bbd94b90e850d1d3.jpg \u0026quot;sample web picture\u0026quot;)\r![](https://b.zol-img.com.cn/sjbizhi/images/12/208x312/1607322405927.jpg \u0026quot;1607322405927\u0026quot;)\r Tables¶\r   Fruit Table Apple Banana     price 12.0 34.0   count 13000 19000000000000000000    Fruit Table | Apple | Banana\r:--- | :---: | ---:\r*price* | 12.0 | 34.0\r*count* | 13000 | 19000000000000000000\r Horizontal Rule¶\ruse three or more (*),(-) to make a horizontal rule, be sure put blank lines before and after horizontal rules.\n Line Break¶\rexcept for double line break, two or more trailing space also break a line\nFootnote¶\rthe [footnote]1 and it\u0026rsquo;s gloss can put in together\nthe footnote[^footnote example] and it's gloss can put in together\r[^footnote example]: https://example.com \u0026quot;I am a footnote\u0026quot;\rEmail¶\rxxx@mail.com\n\u0026lt;xxx@mail.com\u0026gt;\r Special Char Escapes¶\rfollowing characters need backslash escapes to generate literal characters.\n\\ backslash\r` backtick\r* asterisk\r_ underscore\r{} curly braces\r[] square brackets\r() parentheses\r# hash mark\r+ plus sign\r- minus sign (hyphen)\r. dot\r! exclamation mark\rUnsafed Inline HTML¶\rthe mark span element, the kbd tag ctrl+c, GIF, cat123, dog123\nRef.¶\rmarkdownguide.org\r↗ \rGithub Flavored Markdown\r↗ \r  I am a footnote \u0026#x21a9;\u0026#xfe0e;\n   ","n":"Markdown Cheatsheet","u":"https://zyprex.github.io/zyprex.blog/2021/markdown-cheatsheet/"},{"c":"view or modified those shortcodes at [theme_name]/layouts/shortcodes/\nimportant!: for representation need, I replace all {\u0026lt; to { \u0026lt;.\nLabel¶\rparameter¶\r color  \rred \r#cc0000 \rgreen \r#347800 \rcyan \r#238959 \rblue \r#253496 \ryellow \r#a28917 \rbrown \r#7a3d00 \rpink \r#c00666 \rpurple \r#785690 \rgrey \r#3b3b3b \r#FF00FF\r#FF00FF    usage¶\r{{ \u0026lt;label color=\u0026quot;red\u0026quot;\u0026gt;}} red {{ \u0026lt;/label\u0026gt;}}  Fold¶\rparameter¶\r title (optional) color (optional)  #282800 (default)   open (optional)  false (default) true    sample fold title\r-\rsample fold content\r\rusage¶\r{{ \u0026lt;fold title=\u0026quot;sample fold title\u0026quot; open=\u0026quot;true\u0026quot;\u0026gt;}} sample __fold__ content {{ \u0026lt;/fold\u0026gt;}}  Tips¶\rparameter¶\rhover mouse on this \r, you will see a tips\nusage¶\rhover mouse on {{ \u0026lt;tips \u0026quot;this is a \u0026lt;mark\u0026gt;tips\u0026lt;/mark\u0026gt;\u0026quot;\u0026gt;}} this {{ \u0026lt;/tips\u0026gt;}}, you will see a tips  Timer¶\rparameter¶\r id time (optional) UTC time string, for example: \u0026ldquo;2020-01-01 12:12:12\u0026rdquo; format (optional) %y=years, %d=days, %h=hours, %m=minutes, %s=seconds, %e=milliseconds interval (optional) default 1ms  \r\rsetInterval(\"tickTimer('timerTick-mytimer_test', '2020-12-30 01:00:00','%y Year %d Day %h:%m:%s.%e')\", \"80\");\r\rusage¶\r{{ \u0026lt; timer id=\u0026quot;mytimer_test\u0026quot; format=\u0026quot;%y Year %d Day %h:%m:%s.%e\u0026quot; interval=\u0026quot;80\u0026quot; \u0026gt;}}  raw¶\rparameter¶\rnone\nusage¶\rCtrl bold {{ \u0026lt;raw\u0026gt;}} \u0026lt;kbd\u0026gt;Ctrl\u0026lt;/kbd\u0026gt; \u0026lt;b\u0026gt;bold\u0026lt;/b\u0026gt; {{ \u0026lt;/raw\u0026gt;}}  mermaid¶\rparameter¶\rnone\nusage¶\rin front matter set mermaid: true.\n{{ \u0026lt;mermaid\u0026gt;}} ... {{ \u0026lt;/mermaid\u0026gt;}}  chart¶\rparameter¶\r id: unique id for every chart  usage¶\rin front matter set chart: true.\n{{ \u0026lt;chart \u0026quot;mychart1\u0026quot;\u0026gt;}} ... {{ \u0026lt;/chart\u0026gt;}}  ","n":"Banal Shortcodes Showcase","u":"https://zyprex.github.io/zyprex.blog/2021/banal-shortcodes-showcase/"},{"c":"Prologue¶\rThis site\u0026rsquo;s each page has three frontMatter parameter should be clarified, in case of there intention become confused in the future.\n categories: organized page, those page should been well format. tags: trival page, short and unordered, maybe unsortable? keywords: provide keywords to search across site.  Purpose¶\rThis site mainly written down my every\n absurd notion occasional spark uneventful life mediocre ego handy reference messy information  Epilogue¶\rsite update log\n2020-05-22 start my blog from hexo, theme fluid\n2020-10-27 migrate from hexo to hugo, theme maverick\n2020-12-22 change blog theme to engram\n2021-01-31 change blog theme to banal\n2023-02-28 migrate blog to github page\nuntil now my site has running\n\r\rsetInterval(\"tickTimer('timerTick-tick-site-runtime', '2020\\/05\\/22 14:21:16','%y year %d day %h hour %m min %s sec %e ms')\", \"80\");\r\r\n","k":["about","intro","introduction","infor","information","welcome"],"n":"About","u":"https://zyprex.github.io/zyprex.blog/about/"},{"c":"","n":"Search","u":"https://zyprex.github.io/zyprex.blog/search/"},{"c":"Why I Have to Reinstall Win10¶\rWhen I found mpr.dll error stop me to install app such as Chrome, git etc. Also some app can\u0026rsquo;t be launch in this situation. I think it\u0026rsquo;s a serious problem, my computer must be infect by virus. I don\u0026rsquo;t know the actual reason and can do nothing for it. So finally I decide to reinstall win10.\nBefore Install Win10 You Need \u0026hellip;¶\rhttps://www.microsoft.com/en-us/software-download/windows10\nthe install process is tedious, it could last about 2~3 hours when USB boot stick is ready, and another 2~3 hours get stuck in installing interface.\nSolve Problem After Install Finished¶\rDisplay Driver¶\rseek in official website for approriate drivers\nWifi is Hidden And it\u0026rsquo;s Didn\u0026rsquo;t Remember¶\rsome useful program might help you debug \u0026hellip; just use WIN+R run it\n services.msc hdwwiz.cpl (device manager) ncpa.cpl (Network Connections)  I solved by Disable And ReEnable the WiFi-adapter\nYou don\u0026rsquo;t Currently Have Permission To Access This Folder¶\r You don\u0026rsquo;t currently have permission to access this folder. Click Continue to permanently get access to this folder.\n After install, the origin F disc change to E disc, and I can\u0026rsquo;t access E disc, the subfolder also become unreadable !!!\nThe worser is the same ocurred in my D disc, I can\u0026rsquo;t copy move because \u0026ldquo;file acess denied\u0026rdquo; ?!\n1 2 3  ::Run as administrator takeown /F D:\\ /R cacls D:\\ /T /C /G everyone:F   🔗 solution here\r↗ \rLet \u0026lsquo;cmd.exe\u0026rsquo; Use UTF-8 Code Page¶\rrun intl.cpl (Region) \u0026mdash;\u0026gt; Administrative \u0026mdash;\u0026gt; Change system locale \u0026mdash;\u0026gt; Beta: Use Unicode UTF-8 for worldwide language support\nIME¶\rSettings \u0026mdash;\u0026gt; Time \u0026amp; Language \u0026mdash;\u0026gt; Language \u0026mdash;\u0026gt; Preferred languages \u0026mdash;\u0026gt; click \u0026lsquo;Chinese\u0026rsquo; \u0026mdash;\u0026gt; option \u0026mdash;\u0026gt; Keyboards \u0026mdash;\u0026gt; Microsoft Pinyin\nDesktop Icon Tweak¶\rSettings \u0026mdash;\u0026gt; Personalization \u0026mdash;\u0026gt; Themes \u0026mdash;\u0026gt; Desktop icon settings\nReinstall Your Software¶\rTake some wise rules to prevent troublesome things in the future:\n use portable software. use small size software. use open source software. use less dependent software. the fewer software install the better, less is more. use online tools replace of local application. organized application data and your private docs. if possible, choose cross platform software is a good idea. do not keep rarely use software, uninstall them ! save your time and automatic your workflow use script programming language such as shell batch. TEXT is better than WORD or PPT. do not store your data in picture or video format.  ","d":"reinstall windows10 system","n":"Reinstall Win10","u":"https://zyprex.github.io/zyprex.blog/2020/reinstall-win10/"}]}